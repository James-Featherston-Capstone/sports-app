// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  email         String
  password      String
  username      String         @default("Unknown User")
  pfp           String         @default("")
  profile       Profile?
  eventsCreated Event[]
  eventsRSVP    EventRSVP[]
  comments      EventComment[]
}

model Profile {
  id          Int      @id @default(autoincrement())
  firstname   String
  lastname    String
  description String   @default("")
  location    String[] @default([])
  sports      String[] @default([])
  user        User     @relation(fields: [userId], references: [id])
  userId      Int      @unique
}

model Event {
  id          Int            @id @default(autoincrement())
  organizer   User           @relation(fields: [organizerId], references: [id])
  organizerId Int
  eventImage  String         @default("")
  sport       String         @default("")
  description String         @default("")
  eventTime   DateTime
  location    String
  rsvps       EventRSVP[]
  comments    EventComment[]
}

model EventRSVP {
  id      Int   @id @default(autoincrement())
  event   Event @relation(fields: [eventId], references: [id])
  eventId Int
  user    User  @relation(fields: [userId], references: [id])
  userId  Int
}

model EventComment {
  id       Int    @id @default(autoincrement())
  comment  String
  author   User   @relation(fields: [authorId], references: [id])
  authorId Int
  Event    Event  @relation(fields: [eventId], references: [id])
  eventId  Int
}
